const sequelize = require("../../db");
const { DataTypes } = require("sequelize");

const Form = sequelize.define("form", {
  id: { type: DataTypes.INTEGER, primaryKey: true, autoIncrement: true },
  local: { type: DataTypes.STRING },
  address: { type: DataTypes.STRING },
  telephone: { type: DataTypes.ARRAY(DataTypes.STRING) },
  email: { type: DataTypes.STRING },
  town: { type: DataTypes.STRING },
  voivodeship: { type: DataTypes.STRING },
  county: { type: DataTypes.STRING },
  day: { type: DataTypes.ARRAY(DataTypes.STRING) },
  cost: { type: DataTypes.ARRAY(DataTypes.STRING) },
  from: { type: DataTypes.ARRAY(DataTypes.STRING) },
  to: { type: DataTypes.STRING },
  payment_method: { type: DataTypes.STRING },
  presentation_number: { type: DataTypes.ARRAY(DataTypes.STRING) },
  confirm: { type: DataTypes.STRING },
  presentation_time: { type: DataTypes.ARRAY(DataTypes.STRING) },
  room_number: { type: DataTypes.ARRAY(DataTypes.STRING) },
  parking: { type: DataTypes.STRING },
  comments: { type: DataTypes.STRING },
  booker: { type: DataTypes.STRING },
  starting_price: { type: DataTypes.ARRAY(DataTypes.STRING) },
  trade_group: { type: DataTypes.STRING },
  company: { type: DataTypes.STRING },
  relevance_status: { type: DataTypes.BOOLEAN },
  city_id: { type: DataTypes.INTEGER },
  region_id: { type: DataTypes.INTEGER },
  start_coord: { type: DataTypes.DOUBLE },
  end_coord: { type: DataTypes.DOUBLE },
});

const KzForm = sequelize.define("kzform", {
  id: { type: DataTypes.INTEGER, primaryKey: true, autoIncrement: true },
  local: { type: DataTypes.STRING },
  address: { type: DataTypes.STRING },
  telephone: { type: DataTypes.ARRAY(DataTypes.STRING) },
  email: { type: DataTypes.STRING },
  town: { type: DataTypes.STRING },
  voivodeship: { type: DataTypes.STRING },
  county: { type: DataTypes.STRING },
  day: { type: DataTypes.ARRAY(DataTypes.STRING) },
  cost: { type: DataTypes.ARRAY(DataTypes.STRING) },
  from: { type: DataTypes.ARRAY(DataTypes.STRING) },
  to: { type: DataTypes.STRING },
  payment_method: { type: DataTypes.STRING },
  presentation_number: { type: DataTypes.ARRAY(DataTypes.STRING) },
  confirm: { type: DataTypes.STRING },
  presentation_time: { type: DataTypes.ARRAY(DataTypes.STRING) },
  room_number: { type: DataTypes.ARRAY(DataTypes.STRING) },
  parking: { type: DataTypes.STRING },
  comments: { type: DataTypes.STRING },
  booker: { type: DataTypes.STRING },
  starting_price: { type: DataTypes.ARRAY(DataTypes.STRING) },
  trade_group: { type: DataTypes.STRING },
  company: { type: DataTypes.STRING },
  relevance_status: { type: DataTypes.BOOLEAN },
  city_id: { type: DataTypes.INTEGER },
  region_id: { type: DataTypes.INTEGER },
  start_coord: { type: DataTypes.DOUBLE },
  end_coord: { type: DataTypes.DOUBLE },
});

const PlForm = sequelize.define("plform", {
  id: { type: DataTypes.INTEGER, primaryKey: true, autoIncrement: true },
  local: { type: DataTypes.STRING },
  address: { type: DataTypes.STRING },
  telephone: { type: DataTypes.ARRAY(DataTypes.STRING) },
  email: { type: DataTypes.STRING },
  town: { type: DataTypes.STRING },
  voivodeship: { type: DataTypes.STRING },
  county: { type: DataTypes.STRING },
  day: { type: DataTypes.ARRAY(DataTypes.STRING) },
  cost: { type: DataTypes.ARRAY(DataTypes.STRING) },
  from: { type: DataTypes.ARRAY(DataTypes.STRING) },
  to: { type: DataTypes.STRING },
  payment_method: { type: DataTypes.STRING },
  presentation_number: { type: DataTypes.ARRAY(DataTypes.STRING) },
  confirm: { type: DataTypes.STRING },
  presentation_time: { type: DataTypes.ARRAY(DataTypes.STRING) },
  room_number: { type: DataTypes.ARRAY(DataTypes.STRING) },
  parking: { type: DataTypes.STRING },
  comments: { type: DataTypes.STRING },
  booker: { type: DataTypes.STRING },
  starting_price: { type: DataTypes.ARRAY(DataTypes.STRING) },
  trade_group: { type: DataTypes.STRING },
  company: { type: DataTypes.STRING },
  relevance_status: { type: DataTypes.BOOLEAN },
  city_id: { type: DataTypes.INTEGER },
  region_id: { type: DataTypes.INTEGER },
  start_coord: { type: DataTypes.DOUBLE },
  end_coord: { type: DataTypes.DOUBLE },
});

module.exports = {
  Form,
  KzForm,
  PlForm,
};
