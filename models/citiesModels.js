const sequelize = require("../db");
const { DataTypes } = require("sequelize");

const Cities = sequelize.define("city", {
  id: { type: DataTypes.INTEGER, primaryKey: true, autoIncrement: true },
  l_p: { type: DataTypes.INTEGER },
  time: { type: DataTypes.TIME },
  coming: { type: DataTypes.STRING },
  couples: { type: DataTypes.STRING },
  explains: { type: DataTypes.BOOLEAN },
  project: { type: DataTypes.STRING },
  city_lokal: { type: DataTypes.STRING },
  region: { type: DataTypes.STRING },
  adress: { type: DataTypes.STRING },
  institution: { type: DataTypes.STRING },
  hall: { type: DataTypes.STRING },
  date: { type: DataTypes.DATEONLY },
  population: { type: DataTypes.INTEGER },
  city_note: { type: DataTypes.STRING },
  calling_scheme: { type: DataTypes.STRING },
  timezone: { type: DataTypes.INTEGER },
  limit: { type: DataTypes.INTEGER },
  time_unlocking_the_city: { type: DataTypes.STRING },
  start_time_ringing: { type: DataTypes.DATE },
  add_scenario: { type: DataTypes.STRING },
  scenario: { type: DataTypes.STRING },
  verification_dkj: { type: DataTypes.STRING },
  undermining_scenariuszy: { type: DataTypes.STRING },
  present: { type: DataTypes.STRING },
  numbers_for_1_consent: { type: DataTypes.INTEGER },
  wb_1: { type: DataTypes.STRING },
  wb_2: { type: DataTypes.INTEGER },
  quantity_invites: { type: DataTypes.INTEGER },
  days_date: { type: DataTypes.ARRAY(DataTypes.DATEONLY) },
  days_numbers_for_consent: { type: DataTypes.ARRAY(DataTypes.INTEGER) },
  days_topical_quantity_invites: { type: DataTypes.ARRAY(DataTypes.INTEGER) },
  vip_id: { type: DataTypes.STRING },
  vip_format: { type: DataTypes.STRING },
  vip_limit: { type: DataTypes.STRING },
  vip_coming: { type: DataTypes.STRING },
  vip_total_steam: { type: DataTypes.STRING },
  vip_percent_coming: { type: DataTypes.STRING },
  system: { type: DataTypes.STRING },
  consent_results_confirmation: { type: DataTypes.INTEGER },
  refusal_results_confirmation: { type: DataTypes.INTEGER },
  dots_results_confirmation: { type: DataTypes.INTEGER },
  sms_consent: { type: DataTypes.BOOLEAN },
  sms_confirmation: { type: DataTypes.BOOLEAN },
  wiretap_note: { type: DataTypes.STRING },
  wiretapping_sogl: { type: DataTypes.STRING },
  base_stat_1: { type: DataTypes.STRING },
  base_stat_2: { type: DataTypes.STRING },
  base_stat_3: { type: DataTypes.STRING },
  base_stat_4: { type: DataTypes.STRING },
  base_stat_5: { type: DataTypes.STRING },
  id_for_base: { type: DataTypes.INTEGER },
  during: { type: DataTypes.BOOLEAN },
  closed: { type: DataTypes.BOOLEAN },
  base_stat_6: { type: DataTypes.STRING },
  consent_another_city: { type: DataTypes.INTEGER },
  check_base: { type: DataTypes.BOOLEAN },
  check_speaker: { type: DataTypes.BOOLEAN },
  check_scenario: { type: DataTypes.BOOLEAN },
  status: { type: DataTypes.INTEGER },
  l_p_for_pl: { type: DataTypes.STRING },
  explains_for_pl: { type: DataTypes.STRING },
  trailId: { type: DataTypes.INTEGER },
  start_coord: { type: DataTypes.DOUBLE },
  end_coord: { type: DataTypes.DOUBLE },
  departureId: { type: DataTypes.INTEGER },
  departure_date_id: { type: DataTypes.INTEGER },
  visible_in_podil: { type: DataTypes.BOOLEAN },
  visible_in_bases: { type: DataTypes.BOOLEAN },
  visible_in_speaker: { type: DataTypes.BOOLEAN },
  visible_in_scenario: { type: DataTypes.BOOLEAN },
});

const KzCities = sequelize.define("kzcity", {
  id: { type: DataTypes.INTEGER, primaryKey: true, autoIncrement: true },
  l_p: { type: DataTypes.INTEGER },
  time: { type: DataTypes.TIME },
  coming: { type: DataTypes.STRING },
  couples: { type: DataTypes.STRING },
  explains: { type: DataTypes.BOOLEAN },
  project: { type: DataTypes.STRING },
  city_lokal: { type: DataTypes.STRING },
  region: { type: DataTypes.STRING },
  adress: { type: DataTypes.STRING },
  institution: { type: DataTypes.STRING },
  hall: { type: DataTypes.STRING },
  date: { type: DataTypes.DATEONLY },
  population: { type: DataTypes.INTEGER },
  city_note: { type: DataTypes.STRING },
  calling_scheme: { type: DataTypes.STRING },
  timezone: { type: DataTypes.INTEGER },
  limit: { type: DataTypes.INTEGER },
  time_unlocking_the_city: { type: DataTypes.STRING },
  start_time_ringing: { type: DataTypes.DATE },
  add_scenario: { type: DataTypes.STRING },
  scenario: { type: DataTypes.STRING },
  verification_dkj: { type: DataTypes.STRING },
  undermining_scenariuszy: { type: DataTypes.STRING },
  present: { type: DataTypes.STRING },
  numbers_for_1_consent: { type: DataTypes.INTEGER },
  wb_1: { type: DataTypes.STRING },
  wb_2: { type: DataTypes.INTEGER },
  quantity_invites: { type: DataTypes.INTEGER },
  days_date: { type: DataTypes.ARRAY(DataTypes.DATEONLY) },
  days_numbers_for_consent: { type: DataTypes.ARRAY(DataTypes.INTEGER) },
  days_topical_quantity_invites: { type: DataTypes.ARRAY(DataTypes.INTEGER) },
  vip_id: { type: DataTypes.STRING },
  vip_format: { type: DataTypes.STRING },
  vip_limit: { type: DataTypes.STRING },
  vip_coming: { type: DataTypes.STRING },
  vip_total_steam: { type: DataTypes.STRING },
  vip_percent_coming: { type: DataTypes.STRING },
  system: { type: DataTypes.STRING },
  consent_results_confirmation: { type: DataTypes.INTEGER },
  refusal_results_confirmation: { type: DataTypes.INTEGER },
  dots_results_confirmation: { type: DataTypes.INTEGER },
  sms_consent: { type: DataTypes.BOOLEAN },
  sms_confirmation: { type: DataTypes.BOOLEAN },
  wiretap_note: { type: DataTypes.STRING },
  wiretapping_sogl: { type: DataTypes.STRING },
  base_stat_1: { type: DataTypes.STRING },
  base_stat_2: { type: DataTypes.STRING },
  base_stat_3: { type: DataTypes.STRING },
  base_stat_4: { type: DataTypes.STRING },
  base_stat_5: { type: DataTypes.STRING },
  id_for_base: { type: DataTypes.INTEGER },
  during: { type: DataTypes.BOOLEAN },
  closed: { type: DataTypes.BOOLEAN },
  base_stat_6: { type: DataTypes.STRING },
  consent_another_city: { type: DataTypes.INTEGER },
  check_base: { type: DataTypes.BOOLEAN },
  check_speaker: { type: DataTypes.BOOLEAN },
  check_scenario: { type: DataTypes.BOOLEAN },
  status: { type: DataTypes.INTEGER },
  l_p_for_pl: { type: DataTypes.STRING },
  explains_for_pl: { type: DataTypes.STRING },
  trailId: { type: DataTypes.INTEGER },
  start_coord: { type: DataTypes.DOUBLE },
  end_coord: { type: DataTypes.DOUBLE },
  departureId: { type: DataTypes.INTEGER },
  departure_date_id: { type: DataTypes.INTEGER },
  visible_in_podil: { type: DataTypes.BOOLEAN },
  visible_in_bases: { type: DataTypes.BOOLEAN },
  visible_in_speaker: { type: DataTypes.BOOLEAN },
  visible_in_scenario: { type: DataTypes.BOOLEAN },
});

const PlCities = sequelize.define("plcity", {
  id: { type: DataTypes.INTEGER, primaryKey: true, autoIncrement: true },
  l_p: { type: DataTypes.INTEGER },
  time: { type: DataTypes.TIME },
  coming: { type: DataTypes.STRING },
  couples: { type: DataTypes.STRING },
  explains: { type: DataTypes.BOOLEAN },
  project: { type: DataTypes.STRING },
  city_lokal: { type: DataTypes.STRING },
  region: { type: DataTypes.STRING },
  adress: { type: DataTypes.STRING },
  institution: { type: DataTypes.STRING },
  hall: { type: DataTypes.STRING },
  date: { type: DataTypes.DATEONLY },
  population: { type: DataTypes.INTEGER },
  city_note: { type: DataTypes.STRING },
  calling_scheme: { type: DataTypes.STRING },
  timezone: { type: DataTypes.INTEGER },
  limit: { type: DataTypes.INTEGER },
  time_unlocking_the_city: { type: DataTypes.STRING },
  start_time_ringing: { type: DataTypes.DATE },
  add_scenario: { type: DataTypes.STRING },
  scenario: { type: DataTypes.STRING },
  verification_dkj: { type: DataTypes.STRING },
  undermining_scenariuszy: { type: DataTypes.STRING },
  present: { type: DataTypes.STRING },
  numbers_for_1_consent: { type: DataTypes.INTEGER },
  wb_1: { type: DataTypes.STRING },
  wb_2: { type: DataTypes.INTEGER },
  quantity_invites: { type: DataTypes.INTEGER },
  days_date: { type: DataTypes.ARRAY(DataTypes.DATEONLY) },
  days_numbers_for_consent: { type: DataTypes.ARRAY(DataTypes.INTEGER) },
  days_topical_quantity_invites: { type: DataTypes.ARRAY(DataTypes.INTEGER) },
  vip_id: { type: DataTypes.STRING },
  vip_format: { type: DataTypes.STRING },
  vip_limit: { type: DataTypes.STRING },
  vip_coming: { type: DataTypes.STRING },
  vip_total_steam: { type: DataTypes.STRING },
  vip_percent_coming: { type: DataTypes.STRING },
  system: { type: DataTypes.STRING },
  consent_results_confirmation: { type: DataTypes.INTEGER },
  refusal_results_confirmation: { type: DataTypes.INTEGER },
  dots_results_confirmation: { type: DataTypes.INTEGER },
  sms_consent: { type: DataTypes.BOOLEAN },
  sms_confirmation: { type: DataTypes.BOOLEAN },
  wiretap_note: { type: DataTypes.STRING },
  wiretapping_sogl: { type: DataTypes.STRING },
  base_stat_1: { type: DataTypes.STRING },
  base_stat_2: { type: DataTypes.STRING },
  base_stat_3: { type: DataTypes.STRING },
  base_stat_4: { type: DataTypes.STRING },
  base_stat_5: { type: DataTypes.STRING },
  id_for_base: { type: DataTypes.INTEGER },
  during: { type: DataTypes.BOOLEAN },
  closed: { type: DataTypes.BOOLEAN },
  base_stat_6: { type: DataTypes.STRING },
  consent_another_city: { type: DataTypes.INTEGER },
  check_base: { type: DataTypes.BOOLEAN },
  check_speaker: { type: DataTypes.BOOLEAN },
  check_scenario: { type: DataTypes.BOOLEAN },
  status: { type: DataTypes.INTEGER },
  l_p_for_pl: { type: DataTypes.STRING },
  explains_for_pl: { type: DataTypes.STRING },
  trailId: { type: DataTypes.INTEGER },
  start_coord: { type: DataTypes.DOUBLE },
  end_coord: { type: DataTypes.DOUBLE },
  departureId: { type: DataTypes.INTEGER },
  departure_date_id: { type: DataTypes.INTEGER },
  visible_in_podil: { type: DataTypes.BOOLEAN },
  visible_in_bases: { type: DataTypes.BOOLEAN },
  visible_in_speaker: { type: DataTypes.BOOLEAN },
  visible_in_scenario: { type: DataTypes.BOOLEAN },
});

module.exports = {
  Cities,
  KzCities,
  PlCities,
};
